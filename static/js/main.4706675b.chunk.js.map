{"version":3,"sources":["components/search/Search.js","components/loader/Loader.js","components/weather/Weather.js","components/footer/Footer.js","components/app/App.js","index.js"],"names":["Search","className","onSubmit","this","props","getWeather","type","name","placeholder","Component","Loader","Weather","locale","navigator","language","currentData","data","dataList","error","errorTip","loading","sys","country","src","weather","icon","alt","parseInt","main","temp","humidity","description","arrows","infinite","map","item","index","key","value","dt_txt","day","month","year","href","target","rel","API_KEY","App","state","undefined","e","a","preventDefault","setState","city","elements","fetch","api_forecast","api_weather","json","cod","list","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4706675b.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport './Search.scss'\n\n\nexport default class Search extends Component {\n    render() {\n        return (\n            <div className=\"search\">\n                <form onSubmit={this.props.getWeather}>\n                    <input type=\"text\" name=\"city\" placeholder=\"city\"/>\n                    <input type=\"text\" name=\"country\" placeholder=\"country\"/>\n                    <button className=\"submit-search\" type=\"submit\">\n                        <i className=\"fa fa-search\"></i>\n                    </button>\n                </form>\n                {/* <input type=\"text\" placeholder=\"enter here the city name\" />\n                <button className=\"submit-search\" type=\"submit\">\n                    <i className=\"fa fa-search\"></i>\n                </button> */}\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport './Loader.scss'\n\n\nexport default class Loader extends Component {\n    render() {\n        return (\n            <div className=\"lds-ripple\"><div></div><div></div></div>\n        )\n    }\n}","import React, { Component, Fragment } from 'react';\nimport { FormattedDate, IntlProvider, FormattedTime } from \"react-intl\"\nimport './Weather.scss'\nimport Loader from '../loader/Loader'\nimport Carousel from \"@brainhubeu/react-carousel\"\nimport \"@brainhubeu/react-carousel/lib/style.css\"\n\nexport default class Weather extends Component {\n\n\n    \n    render() {\n\n        return (\n\n          <IntlProvider locale={navigator.language}>\n            <div className=\"weather\">\n\n              { !this.props.currentData && !this.props.data && !this.props.dataList && !this.props.error && !this.props.errorTip && this.props.loading &&\n                <Loader/>\n              }\n\n              { this.props.currentData && !this.props.error &&\n                <div>\n                  <h4 className=\"weather__city\">{this.props.currentData.name}, {this.props.currentData.sys.country}</h4>\n                  <img className=\"weather__icon\" src = {`http://openweathermap.org/img/w/${this.props.currentData.weather[0].icon}.png`} alt=\"weather_icon\"/>\n                  <p>current temperature&ensp;<span className=\"bold_data\">{parseInt(this.props.currentData.main.temp)} ºC</span></p>\n                  <p>humidity&ensp;<span className=\"bold_data\">{this.props.currentData.main.humidity}</span></p>\n                  <p>{this.props.currentData.weather[0].description}</p>\n                </div>\n              }\n              { this.props.data && !this.props.error &&\n\n\n              <div>\n                <h4 className=\"weather__forecast\">hourly extended forecast</h4>\n                <i className=\"fa fa-caret-down\"></i>\n                <Carousel arrows infinite>\n                  \n                  {this.props.dataList.map((item, index) => {\n\n                    return (\n                      <Fragment>\n                            <div className=\"item\">\n                              <div className=\"weather__date\">\n                                <FormattedDate\n                                  key={index}\n                                  value={item.dt_txt}\n                                  day=\"numeric\"\n                                  month=\"long\"\n                                  year=\"numeric\"\n                                />\n                              </div>\n                              <div>\n                                <div className=\"weather__time\">\n                                  <FormattedTime \n                                    value={item.dt_txt}\n                                  />\n                                </div>\n                                <div>\n                                  <img className=\"weather__icon\" src = {`http://openweathermap.org/img/w/${item.weather[0].icon}.png`} alt=\"weather_icon\"/>\n                                </div>\n                                <div className=\"weather__temp\">\n                                  {parseInt(item.main.temp)} ºC\n                                </div>\n                                <div className=\"weather__desc\">\n                                  <div>{item.weather[0].description}</div>\n                                </div>\n                              </div>\n                            </div>\n                      </Fragment>\n                    )\n                  })}\n                </Carousel>\n              </div>\n              \n              }\n              {\n                this.props.error && !this.props.data && !this.props.dataList &&\n                  <div>\n                    <i className=\"icon fa fa-exclamation-triangle\"></i>\n                    <p>{this.props.error}</p>\n                    <p>{this.props.errorTip}</p>\n                  </div>\n              }\n            </div>\n          </IntlProvider>\n        )\n    }\n}","import React, {Component} from 'react'\nimport './Footer.scss'\n\n\nexport default class Loader extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <p>\n                    <a href=\"https://www.linkedin.com/in/natacha-romano/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        Developed by Natacha Romano ©\n                    </a>\n                </p>  \n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport './App.scss'\nimport Search from '../search/Search'\nimport Weather from '../weather/Weather'\nimport Footer from '../footer/Footer'\n\nconst API_KEY = '051f55950afd406c29fef8724b3ca520'\n\nexport default class App extends Component {\n\n  state = {\n    data: undefined,\n    dataList: [],\n    currentData: undefined,\n    error: undefined,\n    errorTip: undefined,\n    loading: false\n}\n\ngetWeather = async (e) => {\n  e.preventDefault();\n\n  this.setState({\n    loading: true,\n    data: undefined,\n    dataList: undefined,\n    currentData: undefined,\n    error: undefined,\n    errorTip: undefined\n  })\n\n  let city = e.target.elements.city.value\n\n  let country = e.target.elements.country.value;\n\n  const api_forecast = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&APPID=${API_KEY}&units=metric&lang=en_us&count=3`)\n  const api_weather = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}&units=metric&lang=en_us`)\n  \n  //Convert the api data to Json format to a readable format\n  const data = await api_forecast.json()\n  const currentData = await api_weather.json()\n\n\n  if (data.cod === '404' || currentData.cod === '404') {\n      this.setState({\n          data: undefined,\n          dataList: undefined,\n          error: 'The city was not found.',\n          errorTip: 'Make sure you typed it correctly and in English.'\n      })\n      \n  } else if (city && country) {\n\n      this.setState({\n          data: data,\n          dataList: data.list,\n          currentData: currentData,\n          error: undefined\n      })\n      \n  }\n}\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__column banner\">\n          <h1 className=\"App__column__title\">Weather<br></br>Forecast</h1>\n        </div>\n        <div className=\"App__column content\">\n          <Search\n            getWeather={this.getWeather}\n          />\n          <Weather\n            data={this.state.data}\n            dataList={this.state.dataList}\n            currentData={this.state.currentData}\n            error={this.state.error}\n            errorTip={this.state.errorTip}\n            loading={this.state.loading}\n          />\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}